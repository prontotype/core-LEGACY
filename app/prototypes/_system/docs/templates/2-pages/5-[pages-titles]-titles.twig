{% extends "_layouts/skeleton.twig" %}

{% set content %}

# Page titles

Prontotype will automatically generate titles for all the pages in the system, which can be [accessed in templates]({{ pt.pages.getUrlById('template-ref-pages') }}) and which will be used in any [navigation snippets]({{ pt.pages.getUrlById('snippets-nav') }}) within the prototype.

By default, Prontotype will attempt to create the page title by taking the template file name, stripping out all ordering and ID information and removing the file extension, converting underscores and dashes to spaces, and title-casing the individual words.

So a file name such as `1-[my-id]-all-about-my-kangaroos.twig` would result in a page title of **All About my Kangaroos**.

## Custom page titles

You can also override any of the auto-generated page titles from within [your configuration file]({{ pt.pages.getUrlById('config') }}). To do this you need to add a `pages` configuration block like the following into your chosen config file (if you already have a `pages` config block then just append the `titles` section beneath it):

<pre><code>pages:
  titles:
    '/': Home
    '/zebras': My Zebras Page
    '/monkeys': A page about Monkeys
</code></pre>

Under the `titles` section is a hash of **key**:**value** pairs. The key on the right is a URL for a page, and the value on the left is the desired custom page title.

If you have **assigned IDs to your pages** you can use them instead of the URL of a page as the reference key. This is less brittle because if you move your pages around then the custom page titles reference keys won't need updating.

You can use a page ID by wrapping it in square brackets as follows:

<pre><code>pages:
  titles:
    '[home]': Home
    '[zebras]': My Zebras Page
    '[monkeys]': A page about Monkeys
</code></pre>

It's also perfectly acceptible to use a mix of page URLs and IDs as references for your custom page titles.

{% endset %}
