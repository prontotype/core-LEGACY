{% extends "_layouts/skeleton.twig" %}

{% set content %}

# Generating 'fake' data

To make populating your prototype with content easier, Prontotype [provides a method]({{ pt.pages.getUrlById('template-ref-data') }}#data-faker) for auto-generating data such as names, addresses, dates, numbers and more.

The `pt.data.faker()` method returns a faker instance, which can then be used to generate fake content in your templates. For example:

{% raw %}<pre class="brush: twig">{% set faker = pt.data.faker() %}
Name: {{ faker.firstName }} {{ faker.lastName }}
Address: {{ faker.address }}
Tel: {{ faker.phoneNumber }}</pre>{% endraw %}

This method will generate a randomly generate content for each call to the same method (i.e. firstName etc) and each time the page is refreshed. This is great for testing aspects of your UI with different sets of data, lengths of names, addresses etc.

## Using seeding to repeatably generate the data 

If you want to remove the random generation aspect of the faker method - i.e. to use the **same** set of randomly generated data throughout your prototype and page refreshes - you can **seed** the faker instance by passing in an integer number to the `pt.data.faker()` method.

Everywhere that uses that same seed will then produce the same set of auto-generated data. To help explain this consider the following example:

{% raw %}<pre class="brush: twig">{# NON seeded example #}
{% set faker = pt.data.faker() %}
First Name: {{ faker.firstName }} <!-- Bob -->
First Name: {{ faker.firstName }} <!-- Fred -->

{# Example with seeding #}
{% set seededFaker = pt.data.faker(123) %}
First Name: {{ seededFaker.firstName }} <!-- Jim -->
First Name: {{ seededFaker.firstName }} <!-- Jim --></pre>{% endraw %}

## Prototype-wide configuration

You can configure faker using the following configuration block in your config file:

data:
  faker:
    locale: en_EN # specify locale
    seed: # set global seed here


{% endset %}