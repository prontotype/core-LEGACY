{% extends "_layouts/skeleton.twig" %}

{% set content %}

# Preprocessing CSS

If you want to use [LESS](http://lesscss.org) or [Sass (SCSS syntax)](http://sass-lang.com) to write your stylesheets and compile them into regular CSS, Prontotype's got your back.

Simply create your files with the appropriate extension (`.less` or `.scss`) somewhere within your prototypes `/assets` directory. Then [link to them]({{ pt.pages.getUrlById('snippets-assets') }}) in the head of your document (optionally using the handy [stylesheet snippet]({{ pt.pages.getUrlById('snippets-assets') }})) - Prontotype will then do the heavy lifting on-the-fly to convert the files and serve up the vanilla CSS to the browser.

For example, using a LESS file is a simple as:

{% raw %}<pre class="brush: twig"><!DOCTYPE html>
<html lang="en">
<head>    
    <link rel="stylesheet" href="{{ pt.assets.getUrl('css/example.less') }}" media="all" type="text/css">
</head>
...</pre>{% endraw %}

Or an example using the [stylesheet snippet]({{ pt.pages.getUrlById('snippets-assets') }}) to use a SCSS file:

{% raw %}<pre class="brush: twig"><!DOCTYPE html>
<html lang="en">
<head>    
    {{ pt.snippets.assets.stylesheet('css/example.scss') }}
</head>
...</pre>{% endraw %}


To make things even easier, you can also swap out the `.less`/`.scss` extension for a regular `.css` one. If a matching CSS file is **not found**, it will look for a LESS/SCSS file with the same name, and process that instead. So if you have a LESS file at `css/site.less`, you could link to it as follows:

{% raw %}<pre class="brush: twig"><!DOCTYPE html>
<html lang="en">
<head>    
    <link rel="stylesheet" href="{{ pt.assets.getUrl('css/site.css') }}" media="all" type="text/css">
</head>
...</pre>{% endraw %}

Note that in the unlikely event that you have both a LESS file and a Sass file with the same name, only the LESS one (as it's first alphabetically!) will ever get processed in this scenario.

## Import paths

Within your LESS/SCSS files, any import paths need to be taken relative to the prototype's root `/assets` directory. Current-file relative paths **will not work**.

{% endset %}